java 기초
1. 객체지향프로그램 (OOP)
2. class 단위로 형성
3. 모든 명령어는 소문자
	-> 카멜의 법칙 : 클래스명의 첫 글자는 대문자로 시작한다.  단위가 바뀌면 다시 대문자로 시작
4. 함수() ?
	-> 명령어들의 집합체
	-> 자바가 제공하는  Default 함수는 main 함수이다.
5. 콘솔  System
	-입력 (키보드)	System.in
	-출력 (화면)	System.out

5. 자바의 파일명은 클래스명과 동일하다

HelloTest.java   --- 원시 파일
      ↓ 컴파일(컴파일러)
HelloTest.class


숫자, '문자', "문자열"

2	 '2'	 "2"

이클립스
1. 프로젝트 생성 - 01_basic
2. 패키지 생성 - basic

윈도우	리눅스	자바
폴더		디렉토리	패키지

3. 파일 생성 - HelloTest.java
		 - Variable.java
* bit
- 정보의 최소 단위
- 0 또는 1

* byte
- 영문자
- 1byte = 8bit

            기계어              2진수             10진수            ASCii
'A' ---------------------> 0100 0001  ---------------------> 65
'B' ---------------------> 0100 0010  ---------------------> 66
'a' ---------------------> 0110 0001  ---------------------> 97
5 ---------------------> 0000 0101  ---------------------> 5
0---------------------> 0000 0000 ---------------------> 0
'0' ---------------------> 0011 0000  ---------------------> 48  --- ★
'5' ---------------------> 0011 0101  ---------------------> 53

알파벳 대소문자 : 대문자 + 32 = 소문자
숫자와 숫자문자 : 숫자문자= 숫자 + 48

* 상수 (Constant) - 변하지 않는 값
- 숫자 상수		25, -100
- 문자 상수		'2', 'A', '목'

'문자' - 1개
"문자열" - 1개 이상   --- 주소

* 변수 - 변하는 값
- 현재 데이터를 저장하는 곳

변수명
 : 영문자, 숫자(0-9), _ , $ 를 섞어서 사용 가능
 : 첫 글자는 소문자로 기술한다
 : 단어가 바뀌면 첫 글자를 대문자로 사용

[형식]
자료형 변수명

자료형의 종류
1. 기본형
논리형  -boolean (1bit) -   true, false
문자형  -char	(2byte - 16bit)	0 ~ 65535
정수형  -byte	(1byte - 8bit)	-128 ~ +127
	   -short	(2byte - 16bit)	-32768 ~ +32767
	   -int		(4byte - 32bit)
	   -long	(8byte - 64bit)
실수형  -float	(4byte)
	   -double	(8byte)

2. 객체형
- 모든 클래스는 new 생성해서 써야 한다.
* 다만 static일 경우에는 new 하지 않아도 된다.
String
Integer
Double

DecimalFormat df = new DecimalFormat();		메모리 재활용
df.fofmat(1234);
df.fofmat(1234);
df.fofmat(1234);
df.fofmat(1234);

//---------------------------------------------------
일회용
new DecimalFormat().format(1234)
new DecimalFormat().format(1234)
new DecimalFormat().format(1234)
new DecimalFormat().format(1234)